//
//  HomeInteractor.swift
//  TiendeoTest
//
//  Created Jesús Solé on 06/01/2019.
//  Copyright © 2019 JSolec. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HomeInteractor: HomeInteractorProtocol {

    weak var presenter: HomePresenterProtocol?
    
    private var catalogs: [OfferModel]?
    private var coupons: [OfferModel]?
    
    func getOffers() {
        let observer = API.manager.getOffers()
        let _ = observer.subscribe(onNext: updateOffers,
                                   onError: showError,
                                   onCompleted: nil,
                                   onDisposed: nil)
    }
    
    func setOffers(offers: [OfferModel]) {
        self.catalogs = [OfferModel]()
        self.coupons = [OfferModel]()
        
        for offer in offers {
            if let _ = offer.coupon {
                self.coupons?.append(offer)
            } else {
                self.catalogs?.append(offer)
            }
        }
    }
    
    func updateOffers(offers: [OfferModel]) {
        self.catalogs?.removeAll()
        self.coupons?.removeAll()
        
        self.setOffers(offers: offers)
        self.presenter?.updateOffers()
    }
    
    func showError(error: Error) {
        self.presenter?.showError(error: error)
    }
    
    func getNumberOfCatalogs() -> Int? {
        return self.catalogs?.count
    }
    
    func getNumberOfCoupons() -> Int? {
        return self.coupons?.count
    }
    
    func getCatalogBusisness(index: Int) -> String? {
        return self.catalogs?[index].retailerName
    }
    
    func getCouponBusisness(index: Int) -> String? {
        return self.coupons?[index].retailerName
    }
    
    func getCatalogEndDate(index: Int) -> String? {
        if let endDate = self.catalogs?[index].dateEnd, let milis = Int64(endDate) {
            let date = Date(timeIntervalSince1970: TimeInterval(integerLiteral: milis))
            return date.ddMMyyyyFormat
        }
        return nil
    }
    
    func getCouponEndDate(index: Int) -> String? {
        if let endDate = self.coupons?[index].dateEnd, let milis = Int64(endDate) {
            let date = Date(timeIntervalSince1970: TimeInterval(integerLiteral: milis))
            return date.ddMMyyyyFormat
        }
        return nil
    }
    
    func getCatalogStore(index: Int) -> StoreModel? {
        return self.catalogs?[index].nearestStore
    }
    
    func getCouponStore(index: Int) -> StoreModel? {
        return self.coupons?[index].nearestStore
    }
}
